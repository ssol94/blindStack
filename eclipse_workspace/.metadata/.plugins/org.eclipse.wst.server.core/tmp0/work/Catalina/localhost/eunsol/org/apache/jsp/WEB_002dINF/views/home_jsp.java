/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.20
 * Generated at: 2017-08-29 06:03:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css\">\n");
      out.write("\t\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/style.css\">\n");
      out.write("<style>\n");
      out.write("/* @import url(//fonts.googleapis.com/earlyaccess/hanna.css);\n");
      out.write("\n");
      out.write("body {\n");
      out.write("\tfont-family: 'Hanna';\n");
      out.write("}\n");
      out.write(" */\n");
      out.write(".container {\n");
      out.write("\tpadding-right: 15px;\n");
      out.write("\tpadding-left: 15px;\n");
      out.write("\tmargin-right: auto;\n");
      out.write("\tmargin-left: auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write("@media ( max-width : 768px) {\n");
      out.write("\t.container {\n");
      out.write("\t\twidth: 750px;\n");
      out.write("\t\tbackground: blue;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("@media ( max-width : 992px) {\n");
      out.write("\t.container {\n");
      out.write("\t\twidth: 970px;\n");
      out.write("\t\tbackground: #ff6666;\n");
      out.write("\t}\n");
      out.write("\t.thumbnail {\n");
      out.write("\tfont-size: 80px;\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("@media ( max-width : 1200px) {\n");
      out.write("\t.header {\n");
      out.write("\t\tfont-size: 50px;\n");
      out.write("\t}\n");
      out.write("\t.container {\n");
      out.write("\t\twidth: 1170px;\n");
      out.write("\t\tfont-size: 80px;\n");
      out.write("\t}\n");
      out.write("\t.contents {\n");
      out.write("\tfont-size: 60px;\n");
      out.write("\t}\n");
      out.write("\t.thumb {\n");
      out.write("\tfont-size: 50px;\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write(".container-fluid {\n");
      out.write("\tpadding-right: 15px;\n");
      out.write("\tpadding-left: 15px;\n");
      out.write("\tmargin-right: auto;\n");
      out.write("\tmargin-left: auto;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- 한글 -->\n");
      out.write("\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.11.0.min.js\"></script>\n");
      out.write("<script\n");
      out.write("\tsrc=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<!-- 상단 네비게이션 바 -->\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<div class=\"navbar navbar-inverse navbar-fixed-top\">\n");
      out.write("\t\t <div class=\"header\">\n");
      out.write("\t\t\t<div class=\"col-xs-12 col-md-6\">\n");
      out.write("\t\t\t\t<div class=\"navbar-header\">\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\"\n");
      out.write("\t\t\t\t\t\tdata-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">Toggle navigation</span> <span\n");
      out.write("\t\t\t\t\t\t\tclass=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\n");
      out.write("\t\t\t\t\t\t\tclass=\"icon-bar\"></span>\n");
      out.write("\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t<a class=\"navbar-brand\" href=\"#\">LOTTE</a>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav\">\n");
      out.write("\t\t\t\t\t<li class=\"active\"><a href=\"#\">전체 <span class=\"sr-only\">(current)</span></a></li>\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">기술</a></li>\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">회사생활</a></li>\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">인사</a></li>\n");
      out.write("\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"col-xs-12 col-md-6\">\n");
      out.write("\t\t\t\t<form class=\"navbar-form navbar-left\" role=\"search\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t<div class=\"input-group\">\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"검색어입력\"\n");
      out.write("\t\t\t\t\t\t\taria-label=\"...\">\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group-btn\">\n");
      out.write("\t\t\t\t\t\t\t<!-- Button and dropdown menu -->\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t\t<button type=\"submit\" class=\"btn btn-outline-success my-2 my-sm-0\">검색</button>\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("\t\t\t\t\t<li><a href=\"signup\">회원가입</a></li>\n");
      out.write("\t\t\t\t\t<li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\"\n");
      out.write("\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">회원이름\n");
      out.write("\t\t\t\t\t\t\t<span class=\"caret\"></span>\n");
      out.write("\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t\t\t<ul class=\"dropdown-menu\" role=\"menu\">\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#\">마이페이지</a></li>\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#\">나의 질문</a></li>\n");
      out.write("\t\t\t\t\t\t\t<li class=\"divider\"></li>\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#\">로그아웃 </a></li>\n");
      out.write("\t\t\t\t\t\t</ul></li>\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("</div>\n");
      out.write("\t\t<br> <br> <br>\n");
      out.write("\t\t<div class=\"junbo\" style=\"background: #ff6666\">\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"contents\">\n");
      out.write("\t\t\t\t<p>안녕하십니까! 사내게시판입니다.</p>\n");
      out.write("\t\t\t\t<p>익명게시판입니다. 임직원여러분들의 궁금한 사항들을 올려주세요!</p>\n");
      out.write("\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t<a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">자세히 보기\n");
      out.write("\t\t\t\t\t\t&raquo;</a>\n");
      out.write("\t\t\t\t</p>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<br>\n");
      out.write("\n");
      out.write("\t\t<div class=\"thumb\">\n");
      out.write("\t\t\t<div class=\"col-sm-12 col-md-4\" id=\"test\">\n");
      out.write("\t\t\t\t<div class=\"thumbnail\">\n");
      out.write("\t\t\t\t\t<img src=\"resources/images/hot.jpg\" alt=\"Smiley face\" height=\"300\"\n");
      out.write("\t\t\t\t\t\twidth=\"300\">\n");
      out.write("\t\t\t\t\t<div class=\"caption\">\n");
      out.write("\t\t\t\t\t\t<p>화장실이 너무 더워요</p>\n");
      out.write("\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t<a href=\"#\" class=\"btn btn-primary\" role=\"button\">좋아요</a> <a\n");
      out.write("\t\t\t\t\t\t\t\thref=\"#\" class=\"btn btn-primary\" role=\"button\">싫어요</a> <a\n");
      out.write("\t\t\t\t\t\t\t\thref=\"#\" class=\"btn btn-default\" role=\"button\">자세히 보기</a>\n");
      out.write("\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"col-sm-12 col-md-4\">\n");
      out.write("\t\t\t\t<div class=\"thumbnail\">\n");
      out.write("\t\t\t\t\t<img src=\"resources/images/hot.jpg\" alt=\"Smiley face\" height=\"300\"\n");
      out.write("\t\t\t\t\t\twidth=\"300\">\n");
      out.write("\t\t\t\t\t<div class=\"caption\">\n");
      out.write("\t\t\t\t\t\t<p>화장실이 너무 더워요</p>\n");
      out.write("\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t<a href=\"#\" class=\"btn btn-primary\" role=\"button\">좋아요</a> <a\n");
      out.write("\t\t\t\t\t\t\t\thref=\"#\" class=\"btn btn-primary\" role=\"button\">싫어요</a> <a\n");
      out.write("\t\t\t\t\t\t\t\thref=\"#\" class=\"btn btn-default\" role=\"button\">자세히 보기</a>\n");
      out.write("\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"col-sm-12 col-md-4\">\n");
      out.write("\t\t\t\t<div class=\"thumbnail\">\n");
      out.write("\t\t\t\t\t<img src=\"resources/images/hot.jpg\" alt=\"Smiley face\" height=\"300\"\n");
      out.write("\t\t\t\t\t\twidth=\"300\">\n");
      out.write("\t\t\t\t\t<div class=\"caption\">\n");
      out.write("\t\t\t\t\t\t<p>화장실이 너무 더워요</p>\n");
      out.write("\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t<a href=\"#\" class=\"btn btn-primary\" role=\"button\">좋아요</a> <a\n");
      out.write("\t\t\t\t\t\t\t\thref=\"#\" class=\"btn btn-primary\" role=\"button\">싫어요</a> <a\n");
      out.write("\t\t\t\t\t\t\t\thref=\"#\" class=\"btn btn-default\" role=\"button\">자세히 보기</a>\n");
      out.write("\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
